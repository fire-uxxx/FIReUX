import{bf as k,D as g,q as P,bc as m,U as D,o as I,K as y,bg as U,a1 as C}from"./Dlza5trn.js";import{u as _}from"./DGyA0haI.js";function h(){const{uploadImage:c}=_(),{checkSlug:t}=k();async function u(e){const a=e.toLowerCase().replace(/[^a-z0-9]+/g,"-").replace(/(^-|-$)/g,"");return await t("products",a)?{success:!1,message:"This slug is already in use. Please pick another title."}:{success:!0,slug:a}}async function o(e,a){return await c(e,"products",a,"main")||""}function r(e,a){return((e??0)/100).toLocaleString(void 0,{style:"currency",currency:a,minimumFractionDigits:2})}return{formatPrice:r,placeholderImage:"/img/placeholder-product.png",generateSlug:u,uploadMainImage:o}}function E(){var i;const c=new Date().toISOString(),t=g(),{public:{APP_ID:u}}=P(),o={id:"",name:"",description:"",content:"",active:!0,prices:[],created_at:c,updated_at:c,slug:"",creator_id:((i=t.value)==null?void 0:i.uid)||"",app_id:u,stock:null,track_stock:!1,product_type:"physical"},r=m("createProduct",o),s=m("createProductMainImage",""),{generateSlug:e}=h();D(()=>r.value.name,async n=>{if(!n)return;const l=await e(n);l.success&&(r.value.slug=l.slug)}),I(()=>{var n;(n=t.value)!=null&&n.uid&&(r.value.creator_id=t.value.uid),u&&(r.value.app_id=u)});function a(){var n;r.value={id:"",name:"",description:"",content:"",active:!0,prices:[],created_at:new Date().toISOString(),updated_at:new Date().toISOString(),slug:"",creator_id:((n=t.value)==null?void 0:n.uid)||"",app_id:u,stock:null,track_stock:!1,product_type:"physical"},s.value=""}const d=y(()=>{var l;const n=(l=r.value.name)==null?void 0:l.trim();if(!n)throw new Error("❌ Product name is required.");if(!s.value)throw new Error("❌ Main image is required.");return{name:n,description:r.value.description||"",content:r.value.content||"",active:r.value.active??!0,slug:r.value.slug||"",stock:r.value.stock??null,product_type:r.value.product_type??"physical",track_stock:r.value.track_stock??!1,images:[s.value]}});return{product:r,mainImageData:s,resetCreateProductState:a,productPayload:d}}function b(){const c=m("createProductPrices",[{unit_amount:0,currency:"eur"}]);function t(){c.value.push({unit_amount:0,currency:"eur"})}function u(e){c.value.splice(e,1)}function o(){c.value=[{unit_amount:0,currency:"eur"}]}function r(){o()}const s=y(()=>{if(!c.value.length)throw new Error("❌ At least one price is required.");return c.value.map((e,a)=>{if(!e.unit_amount||e.unit_amount<=0)throw new Error(`❌ Price at index ${a} is missing a valid unit_amount.`);if(!e.currency)throw new Error(`❌ Price at index ${a} is missing a currency.`);return{billing_scheme:e.billing_scheme??"per_unit",currency:e.currency,unit_amount:e.unit_amount,type:e.type??"one_time",interval:e.type==="recurring"?e.interval??"month":void 0,interval_count:e.type==="recurring"?e.interval_count??1:void 0,metadata:e.metadata??{}}})});return{prices:c,addPrice:t,removePrice:u,resetPrices:o,resetCreatePricesState:r,pricesPayload:s}}function w(){const{updateFirestoreDocument:c}=U();async function t(u,o){if(!u)throw new Error("Product ID is required for update.");await c("products",u,o)}return{updateProduct:t}}function F(){const{public:{APP_ID:c}}=P(),{product:t,productPayload:u,mainImageData:o,resetCreateProductState:r}=E(),{pricesPayload:s,resetCreatePricesState:e}=b(),{uploadImage:a}=_(),{updateProduct:d}=w(),i=new Date().toISOString();async function n(){var v;const l=g();for(;!l.value;)await new Promise(p=>setTimeout(p,50));try{const p=await a(o.value,"products",t.value.id||"","main");t.value.main_image=p;const S={...u.value,images:[p],prices:s.value},f=await $fetch("/api/stripe/create-product",{method:"POST",body:{product:S}});return!f.success||!f.id?(console.error("❌ Stripe product creation failed:",f),{success:!1,error:"Stripe product creation failed"}):(await d(f.id,{main_image:t.value.main_image,app_id:c,creator_id:((v=l.value)==null?void 0:v.uid)||"",slug:t.value.slug,content:t.value.content,product_type:t.value.product_type,stock:t.value.stock,track_stock:t.value.track_stock,created_at:i}),r(),e(),{success:!0,id:f.id})}catch(p){return console.error("❌ Product creation error:",p),{success:!1,error:"Unexpected error occurred."}}}return{createProduct:n}}function O(){const c=g();async function t(u){if(!u)throw new Error("No product slug provided.");if(!c.value)throw new Error("No authenticated user found.");try{const o=await $fetch("/api/stripe/delete-product",{method:"POST",body:{slug:u,userId:c.value.uid}});if(o.success)return console.log("✅ Product Deleted Successfully"),!0;throw console.error("❌ Error Deleting Product:",o.error||"Unknown error"),new Error(o.error||"Unknown error")}catch(o){throw console.error("❌ Error Deleting Product:",o),o}}return{deleteProduct:t}}function $(){const{firestoreFetchCollection:c,firestoreFetchDoc:t,firestoreQueryOneByField:u,firestoreFetchSubcollection:o}=C(),{collectionData:r}=c("products");function s(i){return t("products",i)}function e(i){return u("products","slug",i)}const a="EUR";async function d(i){if(!i)return[];try{return await o("products",i,"prices")}catch(n){return console.error("Error fetching prices:",n),[]}}return{defaultCurrency:a,productsCollection:r,fetchProduct:s,fetchProductBySlug:e,fetchProductPrices:d,...F(),...w(),...O(),...h()}}export{E as a,b,$ as u};
