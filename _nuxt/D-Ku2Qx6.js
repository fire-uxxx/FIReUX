import{bv as S,bw as b,bx as y,by as w}from"./B5KPFDU5.js";function U(){const c=S();return{uploadFile:async(d,g)=>{try{const s=b(c,d);return await y(s,g),await w(s)}catch(s){return console.error("[Storage] Upload failed:",s.message),null}}}}function h(){const{uploadFile:c}=U(),p=async({source:r,path:e})=>{console.log("[MediaStorage] Starting profile image upload");let o=null;return r instanceof File?o=await s({file:r,path:e}):typeof r=="string"?o=await g({url:r,path:e}):console.error("[MediaStorage] ❌ Invalid source provided"),console.log("[MediaStorage] Profile image upload complete. Result:",o),o},d=async({file:r,collection:e,id:o,type:t})=>{if(console.log(`[MediaStorage] Uploading ${t} image for collection '${e}' with id: ${o}`),!r||!(r instanceof File))return console.error("[MediaStorage] ❌ Invalid file input"),null;const l=`${e}/${o}/${t}Image.jpg`;try{const a=await m(r,512);console.log("[MediaStorage] ✅ Image blob resized:",a);const n=await u(a,l);return console.log("[MediaStorage] ✅ Image uploaded successfully. Final URL:",n),n}catch(a){return console.error("[MediaStorage] ❌ Error uploading blog image:",a.message),null}},g=async({url:r="",path:e,defaultImgPath:o})=>{if(console.log("[MediaStorage] 🌐 Starting processImageUrl"),!e||typeof e!="string"||e.trim()==="")return console.error("[MediaStorage] ❌ Invalid path for image upload:",e),null;const t=r||o;console.log("[MediaStorage] 📡 Using provided image URL:",t);let l;try{l=await M(t),console.log("[MediaStorage] ✅ Image blob fetched:",l)}catch(a){console.warn("[MediaStorage] ⚠️ Fallback to proxy due to:",a.message);try{const n=`/api/proxy-google-avatar-upload?photo_url=${encodeURIComponent(t)}&storagePath=${encodeURIComponent(e)}`,f=await fetch(n),i=await f.json();if(!f.ok||!i.firebaseUrl)throw new Error(i.message||"Proxy failed.");return console.log("[MediaStorage] ✅ Proxy upload succeeded:",i.firebaseUrl),i.firebaseUrl}catch(n){return console.error("[MediaStorage] ❌ Proxy upload failed:",n.message),null}}try{const a=await m(l,512);console.log("[MediaStorage] ✅ Image blob resized:",a);const n=await u(a,e);return console.log("[MediaStorage] ✅ Image uploaded successfully. Final URL:",n),n}catch(a){return console.error("[MediaStorage] ❌ Error processing image URL:",a.message),null}},s=async({file:r,path:e})=>{if(console.log("[MediaStorage] 🖼️ Starting processImageFile"),!r||!(r instanceof File))return console.error("[MediaStorage] ❌ Invalid file input"),null;if(!e||typeof e!="string"||e.trim()==="")return console.error("[MediaStorage] ❌ Invalid path for image upload:",e),null;try{const o=await m(r,512);console.log("[MediaStorage] ✅ Image blob resized:",o);const t=await u(o,e);return console.log("[MediaStorage] ✅ Image uploaded successfully. Final URL:",t),t}catch(o){return console.error("[MediaStorage] ❌ Error processing image file:",o.message),null}},M=async r=>{console.log("[MediaStorage] Fetching image from URL:",r);const e=await fetch(r,{mode:"cors"});if(!e.ok)throw new Error("Failed to fetch image from URL");const o=await e.blob();return console.log("[MediaStorage] Image fetched and converted to blob"),o},u=async(r,e)=>{try{console.log("[MediaStorage] Uploading blob to path:",e);const o=b(S(),e);await c(e,r);const t=await w(o);return console.log("[MediaStorage] ✅ Fetched download URL:",t),t}catch(o){return console.error("[MediaStorage] Upload failed:",o.message),null}},m=(r,e)=>(console.log("[MediaStorage] Resizing image blob to max width:",e),new Promise((o,t)=>{const l=new Image;l.onload=()=>{const a=document.createElement("canvas"),n=e/l.width;a.width=e,a.height=l.height*n,a.getContext("2d").drawImage(l,0,0,a.width,a.height),a.toBlob(i=>{console.log("[MediaStorage] Image resizing complete"),o(i)},"image/jpeg",.8)},l.onerror=a=>{console.error("[MediaStorage] Error loading image for resize",a),t(a)},l.src=URL.createObjectURL(r)}));return{uploadProfileImage:p,processImageUrl:g,processImageFile:s,uploadImage:d}}export{h as u};
